on: [ push, pull_request ]

name: full

jobs:
  check:
    name: Check + test

    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - 1.43.0
        target:
          - x86_64-unknown-linux-gnu
          - wasm32-unknown-unknown
          - wasm32-wasi

    continue-on-error: ${{ startsWith(matrix.rust, nightly) }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target ${{ matrix.target }} --all-targets --all-features

      - name: Run cargo check release
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target ${{ matrix.target }} --all-targets --all-features --release

      # We currently aren't set up to run tests on wasm:
      - name: Run cargo test
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }} --all-targets --no-fail-fast

      # We currently aren't set up to run tests on wasm:
      - name: Run cargo test release
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }} --all-targets --no-fail-fast --release

  lint:
    needs: check
    name: Format + run clippy

    strategy:
      fail-fast: false
      matrix:
        rust: [ stable, nightly ]

    continue-on-error: ${{ startsWith(matrix.rust, nightly) }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy
          target: wasm32-wasi

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      # Until this gets fixed: https://github.com/rust-lang/rust-clippy/issues/4612
      # we'll run cargo clean first...
      - name: Run cargo clean
        uses: actions-rs/cargo@v1
        with:
          command: clean

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --all-features -- -D warnings
